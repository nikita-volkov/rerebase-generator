module Main where

import Rebase.Prelude
import Rerebase.Generator


main =
  generate $
  map forwardingModule $
  map ModuleName $
  [
    "Prelude",
    "Data.List1",
    "Data.Functor.Identity",
    "Data.Bifunctor",
    "Data.List",
    "Data.Hashable",
    "Data.IntMap.Strict",
    "Data.IntSet",
    "Data.Map.Strict",
    "Data.Sequence",
    "Data.Set",
    "Data.HashMap.Strict",
    "Data.HashSet",
    "Data.Vector",
    "Data.Vector.Mutable",
    "Data.ByteString",
    "Data.ByteString.Builder",
    "Data.ByteString.Char8",
    "Data.ByteString.Lazy",
    "Data.ByteString.Lazy.Char8",
    "Data.ByteString.Short",
    "Data.Text",
    "Data.Text.Encoding.Error",
    "Data.Text.Lazy",
    "Data.Text.Lazy.Builder",
    "Data.Time",
    "Data.Scientific",
    "Data.UUID",
    "Data.DList",
    "Data.Void",
    "Data.Void.Unsafe",
    "Data.Profunctor",
    "Data.Profunctor.Unsafe",
    "Data.Functor.Contravariant",
    "Data.Functor.Contravariant.Divisible",
    "Contravariant.Extras",
    "Data.Semigroup",
    "Data.List.NonEmpty",
    "Data.Bifunctor.Apply",
    "Data.Functor.Alt",
    "Data.Functor.Apply",
    "Data.Functor.Bind",
    "Data.Functor.Extend",
    "Data.Functor.Plus",
    "Data.Semigroup.Bifoldable",
    "Data.Semigroup.Bitraversable",
    "Data.Semigroup.Foldable",
    "Data.Semigroup.Traversable",
    "Data.Semigroupoid",
    "Control.DeepSeq",
    "Control.Monad.IO.Class",
    "Control.Monad.Trans.Class",
    "Control.Monad.Trans.Cont",
    "Control.Monad.Trans.Except",
    "Control.Monad.Trans.Maybe",
    "Control.Monad.Trans.Reader",
    "Control.Monad.Trans.State.Lazy",
    "Control.Monad.Trans.State.Strict",
    "Control.Monad.Trans.Writer.Lazy",
    "Control.Monad.Trans.Writer.Strict",
    "Control.Monad.Cont.Class",
    "Control.Monad.Error.Class",
    "Control.Monad.Reader.Class",
    "Control.Monad.State.Class",
    "Control.Monad.Writer.Class",
    "Control.Monad.Trans.Either",
    "Data.Either.Combinators",
    "Data.Either.Validation",
    "Control.Monad.Fail",
    "Control.Concurrent.STM"
  ]

